import numpy as np

# Parameters
N_planets = 10**24  # Total number of planets in the Universe
T_planets = 7.5 * 10**9  # Average age of planets in the Universe (in years)
T_life = 0.8 * 10**9  # Minimum time required for the emergence of life (in years)
N_attempts = N_planets * (T_planets / T_life)  # Total number of life emergence attempts

P_min = 1 / N_planets  # Lower bound of the probability of life emergence

# Function to perform the simulation
def simulate_life_emergence(P_max, iterations=10_000):
    P_life_samples = np.random.uniform(P_min, P_max, iterations)
    S_min_samples = N_attempts * P_life_samples
    S_min_5th = np.percentile(S_min_samples, 5)
    S_min_95th = np.percentile(S_min_samples, 95)
    return S_min_5th, S_min_95th

# Scenario 0: P_{life_0} ~ U(P_{min}, P_{min})
P_max_0 = P_min
S_min_5th_0, S_min_95th_0 = simulate_life_emergence(P_max_0)
print(f"Scenario 0: 5th percentile: {S_min_5th_0}, 95th percentile: {S_min_95th_0}")

# Scenario 1: P_{life_1} ~ U(P_{min}, √P_{min})
P_max_1 = np.sqrt(P_min)
S_min_5th_1, S_min_95th_1 = simulate_life_emergence(P_max_1)
print(f"Scenario 1: 5th percentile: {S_min_5th_1:.2e}, 95th percentile: {S_min_95th_1:.2e}")

# Scenario 2: P_{life_2} ~ U(P_{min}, ³√P_{min})
P_max_2 = np.cbrt(P_min)
S_min_5th_2, S_min_95th_2 = simulate_life_emergence(P_max_2)
print(f"Scenario 2: 5th percentile: {S_min_5th_2:.2e}, 95th percentile: {S_min_95th_2:.2e}")

# Scenario 3: P_{life_3} ~ U(P_{min}, ⁴√P_{min})
P_max_3 = P_min**0.25
S_min_5th_3, S_min_95th_3 = simulate_life_emergence(P_max_3)
print(f"Scenario 3: 5th percentile: {S_min_5th_3:.2e}, 95th percentile: {S_min_95th_3:.2e}")
